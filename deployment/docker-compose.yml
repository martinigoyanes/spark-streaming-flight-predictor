version: "3.4"
services:
  frontend:
    container_name: flight-predictor_frontend
    image: flight-predictor_frontend
    restart: on-failure
    build:
      context: frontend/
      dockerfile: Dockerfile
      args:
        - USERNAME=frontend
    environment:
      - PROJECT_HOME="."
    ports:
        - 5000:5000
    depends_on:
      - mongo
  mongo:
    container_name: flight-predictor_mongo-db
    image: mongo:5.0.3
    restart: always
    ports:
        - 27017:27017
    volumes:
        - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s

  elastic:
    container_name: flight-predictor_elastic
    tty: True
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    restart: always
    environment:
        cluster.name: "es-docker"
        discovery.type: single-node
        node.name: "elastic"
        ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
    ports:
        - 9200:9200
    ulimits:
        memlock:
            soft: -1
            hard: -1
    volumes:
        - elastic_data:/usr/share/elasticsearch/data

volumes:
  mongo_data:
  elastic_data:

# docker-compose -f docker-compose.yml up
# docker-compose -f docker-compose.yml run --rm -p 8080:8080 dev-gfadmin-back