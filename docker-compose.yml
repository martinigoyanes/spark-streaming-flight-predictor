version: "3.4"
services:
  frontend:
    container_name: flight-predictor_frontend
    hostname: frontend
    image: flight-predictor_frontend
    restart: on-failure
    build:
      context: frontend/
      dockerfile: Dockerfile
      args:
        - USERNAME=frontend
    environment:
      - PROJECT_HOME="."
    ports:
        - 5000:5000
    depends_on:
      - mongodb-setup
      - kafka

  predictor:
    container_name: flight-predictor_predictor
    image: flight-predictor_spark-predictor
    depends_on:
      - mongodb
      - kafka
    ports: 
      - 4040:4040
    build:
      context: predictor/
      dockerfile: Dockerfile

  mongodb:
    container_name: flight-predictor_mongodb
    hostname: mongo
    image: mongo:5.0.3
    restart: always
    ports:
        - 27017:27017
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s

  mongodb-setup:
    container_name: flight-predictor_mongodb-setup
    image: flight-predictor_mongodb-setup
    build:
      context: mongodb/
      dockerfile: Dockerfile.setup
    depends_on:
      - mongodb

  zookeeper:
    container_name: flight-predictor_zookeeper
    hostname: zookeeper
    image: wurstmeister/zookeeper
    ports:
        - 2181:2181

  kafka:
    container_name: kafka
    hostname: kafka
    image: wurstmeister/kafka
    ports:
        - 9092:9092
    environment:
        DOCKER_API_VERSION: 1.22
        KAFKA_ADVERTISED_HOST_NAME: kafka
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafka:9092,INSIDE://localhost:9094
        KAFKA_LISTENERS: OUTSIDE://kafka:9092,INSIDE://localhost:9094
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        # https://hub.docker.com/r/wurstmeister/kafka/ : Topic will have 1 partition and 1 replica
        KAFKA_CREATE_TOPICS: "flight_delay_classification_request:1:1"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

# docker-compose -f docker-compose.yml up